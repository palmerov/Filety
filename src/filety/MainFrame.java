/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package filety;

import filety.data.Property;
import filety.data.PropertyEditor;
import filety.data.StringUtils;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.DefaultListModel;

/**
 *
 * @author palmerovich
 */
public class MainFrame extends javax.swing.JFrame {

    PropertyEditor propertyInspector = new PropertyEditor();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        try {
            setIconImage(Toolkit.getDefaultToolkit().createImage("icon.png"));
        } catch (Exception e) {
        }
        propertyInspector.loadValues();
        jCheckBox1.setSelected(propertyInspector.fullname);
        tfFileName.setText(propertyInspector.fileNameFilter);
        tfRootPath.setText(propertyInspector.rootFile.getAbsolutePath());
        setupPropertiesFindList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        bStartFinding = new javax.swing.JButton();
        jSplitPane3 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPropertiesFind = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        bSave = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tfStartExp = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tfEndExp = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        bStartReplacing = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listValues = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        tfReplaceValue = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bSaveReplacementValue = new javax.swing.JButton();
        labelProp = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPropertiesFound = new javax.swing.JList<>();
        tfRootPath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfFileName = new javax.swing.JTextField();
        labelProgress = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Filety");

        jSplitPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jSplitPane1.setDividerLocation(410);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Find properties", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("FreeMono", 0, 12))); // NOI18N

        bStartFinding.setBackground(new java.awt.Color(204, 204, 255));
        bStartFinding.setForeground(new java.awt.Color(51, 51, 51));
        bStartFinding.setText("Start analyzing!");
        bStartFinding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStartFindingActionPerformed(evt);
            }
        });

        jSplitPane3.setDividerLocation(250);
        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        listPropertiesFind.setFont(new java.awt.Font("FreeMono", 0, 12)); // NOI18N
        listPropertiesFind.setForeground(new java.awt.Color(0, 0, 0));
        listPropertiesFind.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPropertiesFind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPropertiesFindMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listPropertiesFind);

        jSplitPane3.setTopComponent(jScrollPane1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bSave.setBackground(new java.awt.Color(204, 255, 204));
        bSave.setForeground(new java.awt.Color(51, 51, 51));
        bSave.setText("Add property");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        jSplitPane2.setDividerLocation(210);

        jLabel3.setFont(new java.awt.Font("FreeMono", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Start expression");

        tfStartExp.setColumns(20);
        tfStartExp.setRows(5);
        jScrollPane4.setViewportView(tfStartExp);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jSplitPane2.setLeftComponent(jPanel8);

        jLabel5.setFont(new java.awt.Font("FreeMono", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Start expression");

        tfEndExp.setColumns(20);
        tfEndExp.setRows(5);
        jScrollPane5.setViewportView(tfEndExp);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel5)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jSplitPane2.setRightComponent(jPanel10);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane2)
                    .addComponent(bSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jSplitPane2)
                .addGap(2, 2, 2)
                .addComponent(bSave)
                .addGap(4, 4, 4))
        );

        jSplitPane3.setRightComponent(jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(bStartFinding, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addGap(2, 2, 2))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jSplitPane3)
                .addGap(4, 4, 4))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jSplitPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bStartFinding)
                .addGap(4, 4, 4))
        );

        jSplitPane1.setLeftComponent(jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit properties"));

        bStartReplacing.setBackground(new java.awt.Color(204, 204, 255));
        bStartReplacing.setForeground(new java.awt.Color(51, 51, 51));
        bStartReplacing.setText("Start replacing!");
        bStartReplacing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStartReplacingActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "val -> replacement", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("FreeMono", 0, 12))); // NOI18N

        listValues.setFont(new java.awt.Font("FreeMono", 0, 14)); // NOI18N
        listValues.setForeground(new java.awt.Color(0, 0, 0));
        listValues.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listValuesValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listValues);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tfReplaceValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfReplaceValueActionPerformed(evt);
            }
        });
        tfReplaceValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfReplaceValueKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfReplaceValueKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("FreeMono", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Replacement value");

        bSaveReplacementValue.setBackground(new java.awt.Color(204, 255, 204));
        bSaveReplacementValue.setForeground(new java.awt.Color(51, 51, 51));
        bSaveReplacementValue.setText("Set replacement");
        bSaveReplacementValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveReplacementValueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfReplaceValue)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(bSaveReplacementValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel6)
                .addGap(2, 2, 2)
                .addComponent(tfReplaceValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(bSaveReplacementValue)
                .addGap(4, 4, 4))
        );

        labelProp.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        labelProp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelProp.setText("selected property");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(2, 2, 2))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelProp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(labelProp)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Properties", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("FreeMono", 0, 12))); // NOI18N

        listPropertiesFound.setFont(new java.awt.Font("FreeMono", 0, 18)); // NOI18N
        listPropertiesFound.setForeground(new java.awt.Color(0, 0, 0));
        listPropertiesFound.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPropertiesFound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPropertiesFoundMouseClicked(evt);
            }
        });
        listPropertiesFound.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPropertiesFoundValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listPropertiesFound);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane2)
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bStartReplacing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(4, 4, 4))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addComponent(bStartReplacing)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel4);

        tfRootPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRootPathActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("FreeMono", 0, 12)); // NOI18N
        jLabel1.setText("Root path");

        jLabel7.setFont(new java.awt.Font("FreeMono", 0, 12)); // NOI18N
        jLabel7.setText("File names (separate with character '|')");

        tfFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFileNameActionPerformed(evt);
            }
        });

        labelProgress.setText("Progress...");

        jCheckBox1.setText("Full name");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSplitPane1)
                    .addComponent(tfRootPath, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfFileName)
                        .addGap(4, 4, 4)
                        .addComponent(jCheckBox1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(tfRootPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addGap(4, 4, 4)
                .addComponent(jSplitPane1)
                .addGap(2, 2, 2)
                .addComponent(labelProgress)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfRootPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRootPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRootPathActionPerformed

    boolean continueAnalizing = true;
    boolean analizing = false;
    private void bStartFindingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStartFindingActionPerformed
        if (analizing) {
            continueAnalizing = false;
            return;
        }
        propertyInspector.setFileNameFilter(tfFileName.getText().toString());
        propertyInspector.setRootFile(new File(tfRootPath.getText().toString()));
        analizing = true;
        propertyInspector.saveValues();
        bStartFinding.setText("Cancel");
        new Thread(new Runnable() {
            @Override
            public void run() {
                propertyInspector.analyze(new PropertyEditor.ProcessCallback() {
                    @Override
                    public boolean onUpdateProgress(String text) {
                        labelProgress.setText(text);
                        return continueAnalizing;
                    }

                    @Override
                    public void onCancel() {
                        bStartFinding.setText("Start analizing!");
                        analizing = false;
                    }

                    @Override
                    public void onFinish() {
                        bStartFinding.setText("Start analizing!");
                        analizing = false;
                        setupPropertiesFoundList();
                    }
                });
            }
        }).start();
    }//GEN-LAST:event_bStartFindingActionPerformed

    private void tfFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFileNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFileNameActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        String start = tfStartExp.getText();
        String end = tfEndExp.getText();
        if (start.length() > 0 || end.length() > 0) {
            propertyInspector.propertyList.add(new Property(start, end));
            setupPropertiesFindList();
        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void listPropertiesFindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPropertiesFindMouseClicked
        int pos = listPropertiesFind.getSelectedIndex();
        if (pos >= 0) {
            Property property = propertyInspector.propertyList.remove(pos);
            tfStartExp.setText(property.startChain);
            tfEndExp.setText(property.endChain);
            setupPropertiesFindList();
        }
    }//GEN-LAST:event_listPropertiesFindMouseClicked

    private void listPropertiesFoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPropertiesFoundMouseClicked

    }//GEN-LAST:event_listPropertiesFoundMouseClicked

    private void bSaveReplacementValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveReplacementValueActionPerformed
        int[] indexes = listValues.getSelectedIndices();
        if (indexes != null && indexes.length > 0) {
            String replacement = tfReplaceValue.getText().toString();
            Property property = propertyInspector.propertyList.get(listPropertiesFound.getSelectedIndex());
            for (int index : indexes) {
                property.values.get(index).setReplacement(replacement);
            }
            setupValuesList();
            tfReplaceValue.setText("");
        }
    }//GEN-LAST:event_bSaveReplacementValueActionPerformed

    private void tfReplaceValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfReplaceValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfReplaceValueActionPerformed

    private void tfReplaceValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfReplaceValueKeyTyped

    }//GEN-LAST:event_tfReplaceValueKeyTyped

    boolean replacing = false;
    boolean continueReplacing = true;
    private void bStartReplacingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStartReplacingActionPerformed
        if (replacing) {
            continueReplacing = false;
            replacing = false;
            bStartReplacing.setText("Start replacing!");
            return;
        }
        replacing = true;
        bStartReplacing.setText("Cancel");
        new Thread(new Runnable() {
            @Override
            public void run() {
                propertyInspector.replace(new PropertyEditor.ProcessCallback() {
                    @Override
                    public boolean onUpdateProgress(String text) {
                        labelProgress.setText(text);
                        return continueReplacing;
                    }

                    @Override
                    public void onCancel() {
                        bStartReplacing.setText("Start replacing!");
                        replacing = false;
                    }

                    @Override
                    public void onFinish() {
                        bStartReplacing.setText("Start replacing!");
                        replacing = false;
                        clearLists();
                    }
                });
            }
        }).start();
    }//GEN-LAST:event_bStartReplacingActionPerformed

    private void tfReplaceValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfReplaceValueKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            bSaveReplacementValueActionPerformed(null);
        }
    }//GEN-LAST:event_tfReplaceValueKeyReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        propertyInspector.setFullname(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void listValuesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValuesValueChanged
        int[] indexes = listValues.getSelectedIndices();
        if (indexes.length > 0) {
            tfReplaceValue.setText(propertyInspector.propertyList
                    .get(listPropertiesFound.getSelectedIndex()).values.get(indexes[indexes.length - 1]).getReplacement());
        }
    }//GEN-LAST:event_listValuesValueChanged

    private void listPropertiesFoundValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPropertiesFoundValueChanged
        setupValuesList();
        if (listPropertiesFound.getSelectedIndex() >= 0) {
            labelProp.setText(propertyInspector.propertyList.get(listPropertiesFound.getSelectedIndex()).toString());
        }
    }//GEN-LAST:event_listPropertiesFoundValueChanged

    void setupPropertiesFindList() {
        DefaultListModel defaultListModel = new DefaultListModel();
        int i = 1;
        for (Property property : propertyInspector.propertyList) {
            defaultListModel.addElement(i + "- " + property.toString());
            i++;
        }
        listPropertiesFind.setModel(defaultListModel);
    }

    void setupPropertiesFoundList() {
        DefaultListModel defaultListModel = new DefaultListModel();
        for (int i = 0; i < propertyInspector.propertyList.size(); i++) {
            defaultListModel.addElement("" + (i + 1));
        }
        listPropertiesFound.setModel(defaultListModel);
    }

    void setupValuesList() {
        int selPropIndex = listPropertiesFound.getSelectedIndex();
        if (selPropIndex >= 0) {
            DefaultListModel defaultListModel = new DefaultListModel();
            defaultListModel.addAll(propertyInspector.propertyList.get(selPropIndex).values);
            listValues.setModel(defaultListModel);
        }
    }

    void clearLists() {
        DefaultListModel defaultListModel = new DefaultListModel();
        listPropertiesFound.setModel(defaultListModel);
        defaultListModel = new DefaultListModel();
        listValues.setModel(defaultListModel);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bSave;
    private javax.swing.JButton bSaveReplacementValue;
    private javax.swing.JButton bStartFinding;
    private javax.swing.JButton bStartReplacing;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JLabel labelProgress;
    private javax.swing.JLabel labelProp;
    private javax.swing.JList<String> listPropertiesFind;
    private javax.swing.JList<String> listPropertiesFound;
    private javax.swing.JList<String> listValues;
    private javax.swing.JTextArea tfEndExp;
    private javax.swing.JTextField tfFileName;
    private javax.swing.JTextField tfReplaceValue;
    private javax.swing.JTextField tfRootPath;
    private javax.swing.JTextArea tfStartExp;
    // End of variables declaration//GEN-END:variables
}
